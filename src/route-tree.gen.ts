/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './pages/__root'
import { Route as IndexImport } from './pages/index'
import { Route as TermsIndexImport } from './pages/terms/index'
import { Route as OnboardingIndexImport } from './pages/onboarding/index'
import { Route as LoginIndexImport } from './pages/login/index'
import { Route as LoginMessagesImport } from './pages/login/messages'
import { Route as testLiveSessionImport } from './pages/(test)/live-session'
import { Route as testGalleryGridImport } from './pages/(test)/gallery-grid'
import { Route as dashboardLayoutImport } from './pages/(dashboard)/_layout'
import { Route as EventsCreateIndexImport } from './pages/events/create/index'
import { Route as EventsEventIdIndexImport } from './pages/events/$eventId/index'
import { Route as EventSessionEventIdIndexImport } from './pages/event-session/$eventId/index'
import { Route as EnrollEventIdIndexImport } from './pages/enroll/$eventId/index'
import { Route as EventSessionEventIdRecordIndexImport } from './pages/event-session/$eventId/record/index'
import { Route as dashboardLayoutWorkshopsIndexImport } from './pages/(dashboard)/_layout/workshops/index'
import { Route as dashboardLayoutTemplatesIndexImport } from './pages/(dashboard)/_layout/templates/index'
import { Route as dashboardLayoutHelpIndexImport } from './pages/(dashboard)/_layout/help/index'
import { Route as dashboardLayoutEventsIndexImport } from './pages/(dashboard)/_layout/events/index'
import { Route as EventsEventIdRecordingsLayoutImport } from './pages/events/$eventId/recordings/_layout'
import { Route as dashboardLayoutLibraryMediaImport } from './pages/(dashboard)/_layout/library/media'
import { Route as dashboardLayoutLibraryFramesImport } from './pages/(dashboard)/_layout/library/frames'
import { Route as EventsEventIdRecordingsLayoutIndexImport } from './pages/events/$eventId/recordings/_layout/index'
import { Route as EventsEventIdRecordingsLayoutRecordingIdIndexImport } from './pages/events/$eventId/recordings/_layout/$recordingId/index'

// Create Virtual Routes

const dashboardImport = createFileRoute('/(dashboard)')()
const EventsEventIdRecordingsImport = createFileRoute(
  '/events/$eventId/recordings',
)()

// Create/Update Routes

const dashboardRoute = dashboardImport.update({
  id: '/(dashboard)',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TermsIndexRoute = TermsIndexImport.update({
  path: '/terms/',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingIndexRoute = OnboardingIndexImport.update({
  path: '/onboarding/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const LoginMessagesRoute = LoginMessagesImport.update({
  path: '/login/messages',
  getParentRoute: () => rootRoute,
} as any)

const testLiveSessionRoute = testLiveSessionImport.update({
  path: '/live-session',
  getParentRoute: () => rootRoute,
} as any)

const testGalleryGridRoute = testGalleryGridImport.update({
  path: '/gallery-grid',
  getParentRoute: () => rootRoute,
} as any)

const dashboardLayoutRoute = dashboardLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => dashboardRoute,
} as any)

const EventsEventIdRecordingsRoute = EventsEventIdRecordingsImport.update({
  path: '/events/$eventId/recordings',
  getParentRoute: () => rootRoute,
} as any)

const EventsCreateIndexRoute = EventsCreateIndexImport.update({
  path: '/events/create/',
  getParentRoute: () => rootRoute,
} as any)

const EventsEventIdIndexRoute = EventsEventIdIndexImport.update({
  path: '/events/$eventId/',
  getParentRoute: () => rootRoute,
} as any)

const EventSessionEventIdIndexRoute = EventSessionEventIdIndexImport.update({
  path: '/event-session/$eventId/',
  getParentRoute: () => rootRoute,
} as any)

const EnrollEventIdIndexRoute = EnrollEventIdIndexImport.update({
  path: '/enroll/$eventId/',
  getParentRoute: () => rootRoute,
} as any)

const EventSessionEventIdRecordIndexRoute =
  EventSessionEventIdRecordIndexImport.update({
    path: '/event-session/$eventId/record/',
    getParentRoute: () => rootRoute,
  } as any)

const dashboardLayoutWorkshopsIndexRoute =
  dashboardLayoutWorkshopsIndexImport.update({
    path: '/workshops/',
    getParentRoute: () => dashboardLayoutRoute,
  } as any)

const dashboardLayoutTemplatesIndexRoute =
  dashboardLayoutTemplatesIndexImport.update({
    path: '/templates/',
    getParentRoute: () => dashboardLayoutRoute,
  } as any)

const dashboardLayoutHelpIndexRoute = dashboardLayoutHelpIndexImport.update({
  path: '/help/',
  getParentRoute: () => dashboardLayoutRoute,
} as any)

const dashboardLayoutEventsIndexRoute = dashboardLayoutEventsIndexImport.update(
  {
    path: '/events/',
    getParentRoute: () => dashboardLayoutRoute,
  } as any,
)

const EventsEventIdRecordingsLayoutRoute =
  EventsEventIdRecordingsLayoutImport.update({
    id: '/_layout',
    getParentRoute: () => EventsEventIdRecordingsRoute,
  } as any)

const dashboardLayoutLibraryMediaRoute =
  dashboardLayoutLibraryMediaImport.update({
    path: '/library/media',
    getParentRoute: () => dashboardLayoutRoute,
  } as any)

const dashboardLayoutLibraryFramesRoute =
  dashboardLayoutLibraryFramesImport.update({
    path: '/library/frames',
    getParentRoute: () => dashboardLayoutRoute,
  } as any)

const EventsEventIdRecordingsLayoutIndexRoute =
  EventsEventIdRecordingsLayoutIndexImport.update({
    path: '/',
    getParentRoute: () => EventsEventIdRecordingsLayoutRoute,
  } as any)

const EventsEventIdRecordingsLayoutRecordingIdIndexRoute =
  EventsEventIdRecordingsLayoutRecordingIdIndexImport.update({
    path: '/$recordingId/',
    getParentRoute: () => EventsEventIdRecordingsLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/_layout': {
      id: '/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardLayoutImport
      parentRoute: typeof dashboardRoute
    }
    '/(test)/gallery-grid': {
      id: '/gallery-grid'
      path: '/gallery-grid'
      fullPath: '/gallery-grid'
      preLoaderRoute: typeof testGalleryGridImport
      parentRoute: typeof rootRoute
    }
    '/(test)/live-session': {
      id: '/live-session'
      path: '/live-session'
      fullPath: '/live-session'
      preLoaderRoute: typeof testLiveSessionImport
      parentRoute: typeof rootRoute
    }
    '/login/messages': {
      id: '/login/messages'
      path: '/login/messages'
      fullPath: '/login/messages'
      preLoaderRoute: typeof LoginMessagesImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/onboarding/': {
      id: '/onboarding/'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingIndexImport
      parentRoute: typeof rootRoute
    }
    '/terms/': {
      id: '/terms/'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof TermsIndexImport
      parentRoute: typeof rootRoute
    }
    '/enroll/$eventId/': {
      id: '/enroll/$eventId/'
      path: '/enroll/$eventId'
      fullPath: '/enroll/$eventId'
      preLoaderRoute: typeof EnrollEventIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/event-session/$eventId/': {
      id: '/event-session/$eventId/'
      path: '/event-session/$eventId'
      fullPath: '/event-session/$eventId'
      preLoaderRoute: typeof EventSessionEventIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/events/$eventId/': {
      id: '/events/$eventId/'
      path: '/events/$eventId'
      fullPath: '/events/$eventId'
      preLoaderRoute: typeof EventsEventIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/events/create/': {
      id: '/events/create/'
      path: '/events/create'
      fullPath: '/events/create'
      preLoaderRoute: typeof EventsCreateIndexImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/_layout/library/frames': {
      id: '/_layout/library/frames'
      path: '/library/frames'
      fullPath: '/library/frames'
      preLoaderRoute: typeof dashboardLayoutLibraryFramesImport
      parentRoute: typeof dashboardLayoutImport
    }
    '/(dashboard)/_layout/library/media': {
      id: '/_layout/library/media'
      path: '/library/media'
      fullPath: '/library/media'
      preLoaderRoute: typeof dashboardLayoutLibraryMediaImport
      parentRoute: typeof dashboardLayoutImport
    }
    '/events/$eventId/recordings': {
      id: '/events/$eventId/recordings'
      path: '/events/$eventId/recordings'
      fullPath: '/events/$eventId/recordings'
      preLoaderRoute: typeof EventsEventIdRecordingsImport
      parentRoute: typeof rootRoute
    }
    '/events/$eventId/recordings/_layout': {
      id: '/events/$eventId/recordings/_layout'
      path: '/events/$eventId/recordings'
      fullPath: '/events/$eventId/recordings'
      preLoaderRoute: typeof EventsEventIdRecordingsLayoutImport
      parentRoute: typeof EventsEventIdRecordingsRoute
    }
    '/(dashboard)/_layout/events/': {
      id: '/_layout/events/'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof dashboardLayoutEventsIndexImport
      parentRoute: typeof dashboardLayoutImport
    }
    '/(dashboard)/_layout/help/': {
      id: '/_layout/help/'
      path: '/help'
      fullPath: '/help'
      preLoaderRoute: typeof dashboardLayoutHelpIndexImport
      parentRoute: typeof dashboardLayoutImport
    }
    '/(dashboard)/_layout/templates/': {
      id: '/_layout/templates/'
      path: '/templates'
      fullPath: '/templates'
      preLoaderRoute: typeof dashboardLayoutTemplatesIndexImport
      parentRoute: typeof dashboardLayoutImport
    }
    '/(dashboard)/_layout/workshops/': {
      id: '/_layout/workshops/'
      path: '/workshops'
      fullPath: '/workshops'
      preLoaderRoute: typeof dashboardLayoutWorkshopsIndexImport
      parentRoute: typeof dashboardLayoutImport
    }
    '/event-session/$eventId/record/': {
      id: '/event-session/$eventId/record/'
      path: '/event-session/$eventId/record'
      fullPath: '/event-session/$eventId/record'
      preLoaderRoute: typeof EventSessionEventIdRecordIndexImport
      parentRoute: typeof rootRoute
    }
    '/events/$eventId/recordings/_layout/': {
      id: '/events/$eventId/recordings/_layout/'
      path: '/'
      fullPath: '/events/$eventId/recordings/'
      preLoaderRoute: typeof EventsEventIdRecordingsLayoutIndexImport
      parentRoute: typeof EventsEventIdRecordingsLayoutImport
    }
    '/events/$eventId/recordings/_layout/$recordingId/': {
      id: '/events/$eventId/recordings/_layout/$recordingId/'
      path: '/$recordingId'
      fullPath: '/events/$eventId/recordings/$recordingId'
      preLoaderRoute: typeof EventsEventIdRecordingsLayoutRecordingIdIndexImport
      parentRoute: typeof EventsEventIdRecordingsLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  dashboardRoute: dashboardRoute.addChildren({
    dashboardLayoutRoute: dashboardLayoutRoute.addChildren({
      dashboardLayoutLibraryFramesRoute,
      dashboardLayoutLibraryMediaRoute,
      dashboardLayoutEventsIndexRoute,
      dashboardLayoutHelpIndexRoute,
      dashboardLayoutTemplatesIndexRoute,
      dashboardLayoutWorkshopsIndexRoute,
    }),
  }),
  testGalleryGridRoute,
  testLiveSessionRoute,
  LoginMessagesRoute,
  LoginIndexRoute,
  OnboardingIndexRoute,
  TermsIndexRoute,
  EnrollEventIdIndexRoute,
  EventSessionEventIdIndexRoute,
  EventsEventIdIndexRoute,
  EventsCreateIndexRoute,
  EventsEventIdRecordingsRoute: EventsEventIdRecordingsRoute.addChildren({
    EventsEventIdRecordingsLayoutRoute:
      EventsEventIdRecordingsLayoutRoute.addChildren({
        EventsEventIdRecordingsLayoutIndexRoute,
        EventsEventIdRecordingsLayoutRecordingIdIndexRoute,
      }),
  }),
  EventSessionEventIdRecordIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/",
        "/gallery-grid",
        "/live-session",
        "/login/messages",
        "/login/",
        "/onboarding/",
        "/terms/",
        "/enroll/$eventId/",
        "/event-session/$eventId/",
        "/events/$eventId/",
        "/events/create/",
        "/events/$eventId/recordings",
        "/event-session/$eventId/record/"
      ]
    },
    "/": {
      "filePath": "(dashboard)",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "(dashboard)/_layout.tsx",
      "parent": "/",
      "children": [
        "/_layout/library/frames",
        "/_layout/library/media",
        "/_layout/events/",
        "/_layout/help/",
        "/_layout/templates/",
        "/_layout/workshops/"
      ]
    },
    "/gallery-grid": {
      "filePath": "(test)/gallery-grid.tsx"
    },
    "/live-session": {
      "filePath": "(test)/live-session.tsx"
    },
    "/login/messages": {
      "filePath": "login/messages.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/onboarding/": {
      "filePath": "onboarding/index.tsx"
    },
    "/terms/": {
      "filePath": "terms/index.tsx"
    },
    "/enroll/$eventId/": {
      "filePath": "enroll/$eventId/index.tsx"
    },
    "/event-session/$eventId/": {
      "filePath": "event-session/$eventId/index.tsx"
    },
    "/events/$eventId/": {
      "filePath": "events/$eventId/index.tsx"
    },
    "/events/create/": {
      "filePath": "events/create/index.tsx"
    },
    "/_layout/library/frames": {
      "filePath": "(dashboard)/_layout/library/frames.tsx",
      "parent": "/_layout"
    },
    "/_layout/library/media": {
      "filePath": "(dashboard)/_layout/library/media.tsx",
      "parent": "/_layout"
    },
    "/events/$eventId/recordings": {
      "filePath": "events/$eventId/recordings",
      "children": [
        "/events/$eventId/recordings/_layout"
      ]
    },
    "/events/$eventId/recordings/_layout": {
      "filePath": "events/$eventId/recordings/_layout.tsx",
      "parent": "/events/$eventId/recordings",
      "children": [
        "/events/$eventId/recordings/_layout/",
        "/events/$eventId/recordings/_layout/$recordingId/"
      ]
    },
    "/_layout/events/": {
      "filePath": "(dashboard)/_layout/events/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/help/": {
      "filePath": "(dashboard)/_layout/help/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/templates/": {
      "filePath": "(dashboard)/_layout/templates/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/workshops/": {
      "filePath": "(dashboard)/_layout/workshops/index.tsx",
      "parent": "/_layout"
    },
    "/event-session/$eventId/record/": {
      "filePath": "event-session/$eventId/record/index.tsx"
    },
    "/events/$eventId/recordings/_layout/": {
      "filePath": "events/$eventId/recordings/_layout/index.tsx",
      "parent": "/events/$eventId/recordings/_layout"
    },
    "/events/$eventId/recordings/_layout/$recordingId/": {
      "filePath": "events/$eventId/recordings/_layout/$recordingId/index.tsx",
      "parent": "/events/$eventId/recordings/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
