/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './pages/__root'
import { Route as ErrorImport } from './pages/error'
import { Route as IndexImport } from './pages/index'
import { Route as LoginIndexImport } from './pages/login/index'
import { Route as LoginMessagesImport } from './pages/login/messages'
import { Route as dashboardLayoutImport } from './pages/(dashboard)/_layout'
import { Route as EventsCreateIndexImport } from './pages/events/create/index'
import { Route as EventsEventIdIndexImport } from './pages/events/$eventId/index'
import { Route as EventSessionEventIdIndexImport } from './pages/event-session/$eventId/index'
import { Route as EnrollEventIdIndexImport } from './pages/enroll/$eventId/index'
import { Route as EventsEventIdLayoutImport } from './pages/events/$eventId/layout'
import { Route as EventSessionEventIdLayoutImport } from './pages/event-session/$eventId/layout'
import { Route as dashboardLayoutWorkshopsIndexImport } from './pages/(dashboard)/_layout/workshops/index'
import { Route as dashboardLayoutTemplatesIndexImport } from './pages/(dashboard)/_layout/templates/index'
import { Route as dashboardLayoutLibraryIndexImport } from './pages/(dashboard)/_layout/library/index'
import { Route as dashboardLayoutEventsIndexImport } from './pages/(dashboard)/_layout/events/index'

// Create Virtual Routes

const dashboardImport = createFileRoute('/(dashboard)')()

// Create/Update Routes

const dashboardRoute = dashboardImport.update({
  id: '/(dashboard)',
  getParentRoute: () => rootRoute,
} as any)

const ErrorRoute = ErrorImport.update({
  path: '/error',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const LoginMessagesRoute = LoginMessagesImport.update({
  path: '/login/messages',
  getParentRoute: () => rootRoute,
} as any)

const dashboardLayoutRoute = dashboardLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => dashboardRoute,
} as any)

const EventsCreateIndexRoute = EventsCreateIndexImport.update({
  path: '/events/create/',
  getParentRoute: () => rootRoute,
} as any)

const EventsEventIdIndexRoute = EventsEventIdIndexImport.update({
  path: '/events/$eventId/',
  getParentRoute: () => rootRoute,
} as any)

const EventSessionEventIdIndexRoute = EventSessionEventIdIndexImport.update({
  path: '/event-session/$eventId/',
  getParentRoute: () => rootRoute,
} as any)

const EnrollEventIdIndexRoute = EnrollEventIdIndexImport.update({
  path: '/enroll/$eventId/',
  getParentRoute: () => rootRoute,
} as any)

const EventsEventIdLayoutRoute = EventsEventIdLayoutImport.update({
  path: '/events/$eventId/layout',
  getParentRoute: () => rootRoute,
} as any)

const EventSessionEventIdLayoutRoute = EventSessionEventIdLayoutImport.update({
  path: '/event-session/$eventId/layout',
  getParentRoute: () => rootRoute,
} as any)

const dashboardLayoutWorkshopsIndexRoute =
  dashboardLayoutWorkshopsIndexImport.update({
    path: '/workshops/',
    getParentRoute: () => dashboardLayoutRoute,
  } as any)

const dashboardLayoutTemplatesIndexRoute =
  dashboardLayoutTemplatesIndexImport.update({
    path: '/templates/',
    getParentRoute: () => dashboardLayoutRoute,
  } as any)

const dashboardLayoutLibraryIndexRoute =
  dashboardLayoutLibraryIndexImport.update({
    path: '/library/',
    getParentRoute: () => dashboardLayoutRoute,
  } as any)

const dashboardLayoutEventsIndexRoute = dashboardLayoutEventsIndexImport.update(
  {
    path: '/events/',
    getParentRoute: () => dashboardLayoutRoute,
  } as any
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/error': {
      id: '/error'
      path: '/error'
      fullPath: '/error'
      preLoaderRoute: typeof ErrorImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/_layout': {
      id: '/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardLayoutImport
      parentRoute: typeof dashboardRoute
    }
    '/login/messages': {
      id: '/login/messages'
      path: '/login/messages'
      fullPath: '/login/messages'
      preLoaderRoute: typeof LoginMessagesImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/event-session/$eventId/layout': {
      id: '/event-session/$eventId/layout'
      path: '/event-session/$eventId/layout'
      fullPath: '/event-session/$eventId/layout'
      preLoaderRoute: typeof EventSessionEventIdLayoutImport
      parentRoute: typeof rootRoute
    }
    '/events/$eventId/layout': {
      id: '/events/$eventId/layout'
      path: '/events/$eventId/layout'
      fullPath: '/events/$eventId/layout'
      preLoaderRoute: typeof EventsEventIdLayoutImport
      parentRoute: typeof rootRoute
    }
    '/enroll/$eventId/': {
      id: '/enroll/$eventId/'
      path: '/enroll/$eventId'
      fullPath: '/enroll/$eventId'
      preLoaderRoute: typeof EnrollEventIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/event-session/$eventId/': {
      id: '/event-session/$eventId/'
      path: '/event-session/$eventId'
      fullPath: '/event-session/$eventId'
      preLoaderRoute: typeof EventSessionEventIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/events/$eventId/': {
      id: '/events/$eventId/'
      path: '/events/$eventId'
      fullPath: '/events/$eventId'
      preLoaderRoute: typeof EventsEventIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/events/create/': {
      id: '/events/create/'
      path: '/events/create'
      fullPath: '/events/create'
      preLoaderRoute: typeof EventsCreateIndexImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/_layout/events/': {
      id: '/_layout/events/'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof dashboardLayoutEventsIndexImport
      parentRoute: typeof dashboardLayoutImport
    }
    '/(dashboard)/_layout/library/': {
      id: '/_layout/library/'
      path: '/library'
      fullPath: '/library'
      preLoaderRoute: typeof dashboardLayoutLibraryIndexImport
      parentRoute: typeof dashboardLayoutImport
    }
    '/(dashboard)/_layout/templates/': {
      id: '/_layout/templates/'
      path: '/templates'
      fullPath: '/templates'
      preLoaderRoute: typeof dashboardLayoutTemplatesIndexImport
      parentRoute: typeof dashboardLayoutImport
    }
    '/(dashboard)/_layout/workshops/': {
      id: '/_layout/workshops/'
      path: '/workshops'
      fullPath: '/workshops'
      preLoaderRoute: typeof dashboardLayoutWorkshopsIndexImport
      parentRoute: typeof dashboardLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  ErrorRoute,
  dashboardRoute: dashboardRoute.addChildren({
    dashboardLayoutRoute: dashboardLayoutRoute.addChildren({
      dashboardLayoutEventsIndexRoute,
      dashboardLayoutLibraryIndexRoute,
      dashboardLayoutTemplatesIndexRoute,
      dashboardLayoutWorkshopsIndexRoute,
    }),
  }),
  LoginMessagesRoute,
  LoginIndexRoute,
  EventSessionEventIdLayoutRoute,
  EventsEventIdLayoutRoute,
  EnrollEventIdIndexRoute,
  EventSessionEventIdIndexRoute,
  EventsEventIdIndexRoute,
  EventsCreateIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/error",
        "/",
        "/login/messages",
        "/login/",
        "/event-session/$eventId/layout",
        "/events/$eventId/layout",
        "/enroll/$eventId/",
        "/event-session/$eventId/",
        "/events/$eventId/",
        "/events/create/"
      ]
    },
    "/": {
      "filePath": "(dashboard)",
      "children": [
        "/_layout"
      ]
    },
    "/error": {
      "filePath": "error.tsx"
    },
    "/_layout": {
      "filePath": "(dashboard)/_layout.tsx",
      "parent": "/",
      "children": [
        "/_layout/events/",
        "/_layout/library/",
        "/_layout/templates/",
        "/_layout/workshops/"
      ]
    },
    "/login/messages": {
      "filePath": "login/messages.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/event-session/$eventId/layout": {
      "filePath": "event-session/$eventId/layout.tsx"
    },
    "/events/$eventId/layout": {
      "filePath": "events/$eventId/layout.tsx"
    },
    "/enroll/$eventId/": {
      "filePath": "enroll/$eventId/index.tsx"
    },
    "/event-session/$eventId/": {
      "filePath": "event-session/$eventId/index.tsx"
    },
    "/events/$eventId/": {
      "filePath": "events/$eventId/index.tsx"
    },
    "/events/create/": {
      "filePath": "events/create/index.tsx"
    },
    "/_layout/events/": {
      "filePath": "(dashboard)/_layout/events/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/library/": {
      "filePath": "(dashboard)/_layout/library/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/templates/": {
      "filePath": "(dashboard)/_layout/templates/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/workshops/": {
      "filePath": "(dashboard)/_layout/workshops/index.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
