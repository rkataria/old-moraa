/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './pages/__root'
import { Route as IndexImport } from './pages/index'
import { Route as TermsIndexImport } from './pages/terms/index'
import { Route as OnboardingIndexImport } from './pages/onboarding/index'
import { Route as LoginIndexImport } from './pages/login/index'
import { Route as LoginMessagesImport } from './pages/login/messages'
import { Route as dashboardLayoutImport } from './pages/(dashboard)/_layout'
import { Route as EventsCreateIndexImport } from './pages/events/create/index'
import { Route as EventsEventIdIndexImport } from './pages/events/$eventId/index'
import { Route as EventSessionEventIdIndexImport } from './pages/event-session/$eventId/index'
import { Route as EnrollEventIdIndexImport } from './pages/enroll/$eventId/index'
import { Route as EventSessionEventIdRecordIndexImport } from './pages/event-session/$eventId/record/index'
import { Route as dashboardLayoutWorkshopsIndexImport } from './pages/(dashboard)/_layout/workshops/index'
import { Route as dashboardLayoutTemplatesIndexImport } from './pages/(dashboard)/_layout/templates/index'
import { Route as dashboardLayoutHelpIndexImport } from './pages/(dashboard)/_layout/help/index'
import { Route as dashboardLayoutEventsIndexImport } from './pages/(dashboard)/_layout/events/index'
import { Route as dashboardLayoutLibraryMediaImport } from './pages/(dashboard)/_layout/library/media'
import { Route as dashboardLayoutLibraryFramesImport } from './pages/(dashboard)/_layout/library/frames'

// Create Virtual Routes

const dashboardImport = createFileRoute('/(dashboard)')()

// Create/Update Routes

const dashboardRoute = dashboardImport.update({
  id: '/(dashboard)',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TermsIndexRoute = TermsIndexImport.update({
  id: '/terms/',
  path: '/terms/',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingIndexRoute = OnboardingIndexImport.update({
  id: '/onboarding/',
  path: '/onboarding/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const LoginMessagesRoute = LoginMessagesImport.update({
  id: '/login/messages',
  path: '/login/messages',
  getParentRoute: () => rootRoute,
} as any)

const dashboardLayoutRoute = dashboardLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => dashboardRoute,
} as any)

const EventsCreateIndexRoute = EventsCreateIndexImport.update({
  id: '/events/create/',
  path: '/events/create/',
  getParentRoute: () => rootRoute,
} as any)

const EventsEventIdIndexRoute = EventsEventIdIndexImport.update({
  id: '/events/$eventId/',
  path: '/events/$eventId/',
  getParentRoute: () => rootRoute,
} as any)

const EventSessionEventIdIndexRoute = EventSessionEventIdIndexImport.update({
  id: '/event-session/$eventId/',
  path: '/event-session/$eventId/',
  getParentRoute: () => rootRoute,
} as any)

const EnrollEventIdIndexRoute = EnrollEventIdIndexImport.update({
  id: '/enroll/$eventId/',
  path: '/enroll/$eventId/',
  getParentRoute: () => rootRoute,
} as any)

const EventSessionEventIdRecordIndexRoute =
  EventSessionEventIdRecordIndexImport.update({
    id: '/event-session/$eventId/record/',
    path: '/event-session/$eventId/record/',
    getParentRoute: () => rootRoute,
  } as any)

const dashboardLayoutWorkshopsIndexRoute =
  dashboardLayoutWorkshopsIndexImport.update({
    id: '/workshops/',
    path: '/workshops/',
    getParentRoute: () => dashboardLayoutRoute,
  } as any)

const dashboardLayoutTemplatesIndexRoute =
  dashboardLayoutTemplatesIndexImport.update({
    id: '/templates/',
    path: '/templates/',
    getParentRoute: () => dashboardLayoutRoute,
  } as any)

const dashboardLayoutHelpIndexRoute = dashboardLayoutHelpIndexImport.update({
  id: '/help/',
  path: '/help/',
  getParentRoute: () => dashboardLayoutRoute,
} as any)

const dashboardLayoutEventsIndexRoute = dashboardLayoutEventsIndexImport.update(
  {
    id: '/events/',
    path: '/events/',
    getParentRoute: () => dashboardLayoutRoute,
  } as any,
)

const dashboardLayoutLibraryMediaRoute =
  dashboardLayoutLibraryMediaImport.update({
    id: '/library/media',
    path: '/library/media',
    getParentRoute: () => dashboardLayoutRoute,
  } as any)

const dashboardLayoutLibraryFramesRoute =
  dashboardLayoutLibraryFramesImport.update({
    id: '/library/frames',
    path: '/library/frames',
    getParentRoute: () => dashboardLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)': {
      id: '/(dashboard)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/_layout': {
      id: '/(dashboard)/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardLayoutImport
      parentRoute: typeof dashboardRoute
    }
    '/login/messages': {
      id: '/login/messages'
      path: '/login/messages'
      fullPath: '/login/messages'
      preLoaderRoute: typeof LoginMessagesImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/onboarding/': {
      id: '/onboarding/'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingIndexImport
      parentRoute: typeof rootRoute
    }
    '/terms/': {
      id: '/terms/'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof TermsIndexImport
      parentRoute: typeof rootRoute
    }
    '/enroll/$eventId/': {
      id: '/enroll/$eventId/'
      path: '/enroll/$eventId'
      fullPath: '/enroll/$eventId'
      preLoaderRoute: typeof EnrollEventIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/event-session/$eventId/': {
      id: '/event-session/$eventId/'
      path: '/event-session/$eventId'
      fullPath: '/event-session/$eventId'
      preLoaderRoute: typeof EventSessionEventIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/events/$eventId/': {
      id: '/events/$eventId/'
      path: '/events/$eventId'
      fullPath: '/events/$eventId'
      preLoaderRoute: typeof EventsEventIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/events/create/': {
      id: '/events/create/'
      path: '/events/create'
      fullPath: '/events/create'
      preLoaderRoute: typeof EventsCreateIndexImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/_layout/library/frames': {
      id: '/(dashboard)/_layout/library/frames'
      path: '/library/frames'
      fullPath: '/library/frames'
      preLoaderRoute: typeof dashboardLayoutLibraryFramesImport
      parentRoute: typeof dashboardLayoutImport
    }
    '/(dashboard)/_layout/library/media': {
      id: '/(dashboard)/_layout/library/media'
      path: '/library/media'
      fullPath: '/library/media'
      preLoaderRoute: typeof dashboardLayoutLibraryMediaImport
      parentRoute: typeof dashboardLayoutImport
    }
    '/(dashboard)/_layout/events/': {
      id: '/(dashboard)/_layout/events/'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof dashboardLayoutEventsIndexImport
      parentRoute: typeof dashboardLayoutImport
    }
    '/(dashboard)/_layout/help/': {
      id: '/(dashboard)/_layout/help/'
      path: '/help'
      fullPath: '/help'
      preLoaderRoute: typeof dashboardLayoutHelpIndexImport
      parentRoute: typeof dashboardLayoutImport
    }
    '/(dashboard)/_layout/templates/': {
      id: '/(dashboard)/_layout/templates/'
      path: '/templates'
      fullPath: '/templates'
      preLoaderRoute: typeof dashboardLayoutTemplatesIndexImport
      parentRoute: typeof dashboardLayoutImport
    }
    '/(dashboard)/_layout/workshops/': {
      id: '/(dashboard)/_layout/workshops/'
      path: '/workshops'
      fullPath: '/workshops'
      preLoaderRoute: typeof dashboardLayoutWorkshopsIndexImport
      parentRoute: typeof dashboardLayoutImport
    }
    '/event-session/$eventId/record/': {
      id: '/event-session/$eventId/record/'
      path: '/event-session/$eventId/record'
      fullPath: '/event-session/$eventId/record'
      preLoaderRoute: typeof EventSessionEventIdRecordIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface dashboardLayoutRouteChildren {
  dashboardLayoutLibraryFramesRoute: typeof dashboardLayoutLibraryFramesRoute
  dashboardLayoutLibraryMediaRoute: typeof dashboardLayoutLibraryMediaRoute
  dashboardLayoutEventsIndexRoute: typeof dashboardLayoutEventsIndexRoute
  dashboardLayoutHelpIndexRoute: typeof dashboardLayoutHelpIndexRoute
  dashboardLayoutTemplatesIndexRoute: typeof dashboardLayoutTemplatesIndexRoute
  dashboardLayoutWorkshopsIndexRoute: typeof dashboardLayoutWorkshopsIndexRoute
}

const dashboardLayoutRouteChildren: dashboardLayoutRouteChildren = {
  dashboardLayoutLibraryFramesRoute: dashboardLayoutLibraryFramesRoute,
  dashboardLayoutLibraryMediaRoute: dashboardLayoutLibraryMediaRoute,
  dashboardLayoutEventsIndexRoute: dashboardLayoutEventsIndexRoute,
  dashboardLayoutHelpIndexRoute: dashboardLayoutHelpIndexRoute,
  dashboardLayoutTemplatesIndexRoute: dashboardLayoutTemplatesIndexRoute,
  dashboardLayoutWorkshopsIndexRoute: dashboardLayoutWorkshopsIndexRoute,
}

const dashboardLayoutRouteWithChildren = dashboardLayoutRoute._addFileChildren(
  dashboardLayoutRouteChildren,
)

interface dashboardRouteChildren {
  dashboardLayoutRoute: typeof dashboardLayoutRouteWithChildren
}

const dashboardRouteChildren: dashboardRouteChildren = {
  dashboardLayoutRoute: dashboardLayoutRouteWithChildren,
}

const dashboardRouteWithChildren = dashboardRoute._addFileChildren(
  dashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof dashboardLayoutRouteWithChildren
  '/login/messages': typeof LoginMessagesRoute
  '/login': typeof LoginIndexRoute
  '/onboarding': typeof OnboardingIndexRoute
  '/terms': typeof TermsIndexRoute
  '/enroll/$eventId': typeof EnrollEventIdIndexRoute
  '/event-session/$eventId': typeof EventSessionEventIdIndexRoute
  '/events/$eventId': typeof EventsEventIdIndexRoute
  '/events/create': typeof EventsCreateIndexRoute
  '/library/frames': typeof dashboardLayoutLibraryFramesRoute
  '/library/media': typeof dashboardLayoutLibraryMediaRoute
  '/events': typeof dashboardLayoutEventsIndexRoute
  '/help': typeof dashboardLayoutHelpIndexRoute
  '/templates': typeof dashboardLayoutTemplatesIndexRoute
  '/workshops': typeof dashboardLayoutWorkshopsIndexRoute
  '/event-session/$eventId/record': typeof EventSessionEventIdRecordIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof dashboardLayoutRouteWithChildren
  '/login/messages': typeof LoginMessagesRoute
  '/login': typeof LoginIndexRoute
  '/onboarding': typeof OnboardingIndexRoute
  '/terms': typeof TermsIndexRoute
  '/enroll/$eventId': typeof EnrollEventIdIndexRoute
  '/event-session/$eventId': typeof EventSessionEventIdIndexRoute
  '/events/$eventId': typeof EventsEventIdIndexRoute
  '/events/create': typeof EventsCreateIndexRoute
  '/library/frames': typeof dashboardLayoutLibraryFramesRoute
  '/library/media': typeof dashboardLayoutLibraryMediaRoute
  '/events': typeof dashboardLayoutEventsIndexRoute
  '/help': typeof dashboardLayoutHelpIndexRoute
  '/templates': typeof dashboardLayoutTemplatesIndexRoute
  '/workshops': typeof dashboardLayoutWorkshopsIndexRoute
  '/event-session/$eventId/record': typeof EventSessionEventIdRecordIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(dashboard)': typeof dashboardRouteWithChildren
  '/(dashboard)/_layout': typeof dashboardLayoutRouteWithChildren
  '/login/messages': typeof LoginMessagesRoute
  '/login/': typeof LoginIndexRoute
  '/onboarding/': typeof OnboardingIndexRoute
  '/terms/': typeof TermsIndexRoute
  '/enroll/$eventId/': typeof EnrollEventIdIndexRoute
  '/event-session/$eventId/': typeof EventSessionEventIdIndexRoute
  '/events/$eventId/': typeof EventsEventIdIndexRoute
  '/events/create/': typeof EventsCreateIndexRoute
  '/(dashboard)/_layout/library/frames': typeof dashboardLayoutLibraryFramesRoute
  '/(dashboard)/_layout/library/media': typeof dashboardLayoutLibraryMediaRoute
  '/(dashboard)/_layout/events/': typeof dashboardLayoutEventsIndexRoute
  '/(dashboard)/_layout/help/': typeof dashboardLayoutHelpIndexRoute
  '/(dashboard)/_layout/templates/': typeof dashboardLayoutTemplatesIndexRoute
  '/(dashboard)/_layout/workshops/': typeof dashboardLayoutWorkshopsIndexRoute
  '/event-session/$eventId/record/': typeof EventSessionEventIdRecordIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login/messages'
    | '/login'
    | '/onboarding'
    | '/terms'
    | '/enroll/$eventId'
    | '/event-session/$eventId'
    | '/events/$eventId'
    | '/events/create'
    | '/library/frames'
    | '/library/media'
    | '/events'
    | '/help'
    | '/templates'
    | '/workshops'
    | '/event-session/$eventId/record'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login/messages'
    | '/login'
    | '/onboarding'
    | '/terms'
    | '/enroll/$eventId'
    | '/event-session/$eventId'
    | '/events/$eventId'
    | '/events/create'
    | '/library/frames'
    | '/library/media'
    | '/events'
    | '/help'
    | '/templates'
    | '/workshops'
    | '/event-session/$eventId/record'
  id:
    | '__root__'
    | '/'
    | '/(dashboard)'
    | '/(dashboard)/_layout'
    | '/login/messages'
    | '/login/'
    | '/onboarding/'
    | '/terms/'
    | '/enroll/$eventId/'
    | '/event-session/$eventId/'
    | '/events/$eventId/'
    | '/events/create/'
    | '/(dashboard)/_layout/library/frames'
    | '/(dashboard)/_layout/library/media'
    | '/(dashboard)/_layout/events/'
    | '/(dashboard)/_layout/help/'
    | '/(dashboard)/_layout/templates/'
    | '/(dashboard)/_layout/workshops/'
    | '/event-session/$eventId/record/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  dashboardRoute: typeof dashboardRouteWithChildren
  LoginMessagesRoute: typeof LoginMessagesRoute
  LoginIndexRoute: typeof LoginIndexRoute
  OnboardingIndexRoute: typeof OnboardingIndexRoute
  TermsIndexRoute: typeof TermsIndexRoute
  EnrollEventIdIndexRoute: typeof EnrollEventIdIndexRoute
  EventSessionEventIdIndexRoute: typeof EventSessionEventIdIndexRoute
  EventsEventIdIndexRoute: typeof EventsEventIdIndexRoute
  EventsCreateIndexRoute: typeof EventsCreateIndexRoute
  EventSessionEventIdRecordIndexRoute: typeof EventSessionEventIdRecordIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  dashboardRoute: dashboardRouteWithChildren,
  LoginMessagesRoute: LoginMessagesRoute,
  LoginIndexRoute: LoginIndexRoute,
  OnboardingIndexRoute: OnboardingIndexRoute,
  TermsIndexRoute: TermsIndexRoute,
  EnrollEventIdIndexRoute: EnrollEventIdIndexRoute,
  EventSessionEventIdIndexRoute: EventSessionEventIdIndexRoute,
  EventsEventIdIndexRoute: EventsEventIdIndexRoute,
  EventsCreateIndexRoute: EventsCreateIndexRoute,
  EventSessionEventIdRecordIndexRoute: EventSessionEventIdRecordIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(dashboard)",
        "/login/messages",
        "/login/",
        "/onboarding/",
        "/terms/",
        "/enroll/$eventId/",
        "/event-session/$eventId/",
        "/events/$eventId/",
        "/events/create/",
        "/event-session/$eventId/record/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(dashboard)": {
      "filePath": "(dashboard)",
      "children": [
        "/(dashboard)/_layout"
      ]
    },
    "/(dashboard)/_layout": {
      "filePath": "(dashboard)/_layout.tsx",
      "parent": "/(dashboard)",
      "children": [
        "/(dashboard)/_layout/library/frames",
        "/(dashboard)/_layout/library/media",
        "/(dashboard)/_layout/events/",
        "/(dashboard)/_layout/help/",
        "/(dashboard)/_layout/templates/",
        "/(dashboard)/_layout/workshops/"
      ]
    },
    "/login/messages": {
      "filePath": "login/messages.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/onboarding/": {
      "filePath": "onboarding/index.tsx"
    },
    "/terms/": {
      "filePath": "terms/index.tsx"
    },
    "/enroll/$eventId/": {
      "filePath": "enroll/$eventId/index.tsx"
    },
    "/event-session/$eventId/": {
      "filePath": "event-session/$eventId/index.tsx"
    },
    "/events/$eventId/": {
      "filePath": "events/$eventId/index.tsx"
    },
    "/events/create/": {
      "filePath": "events/create/index.tsx"
    },
    "/(dashboard)/_layout/library/frames": {
      "filePath": "(dashboard)/_layout/library/frames.tsx",
      "parent": "/(dashboard)/_layout"
    },
    "/(dashboard)/_layout/library/media": {
      "filePath": "(dashboard)/_layout/library/media.tsx",
      "parent": "/(dashboard)/_layout"
    },
    "/(dashboard)/_layout/events/": {
      "filePath": "(dashboard)/_layout/events/index.tsx",
      "parent": "/(dashboard)/_layout"
    },
    "/(dashboard)/_layout/help/": {
      "filePath": "(dashboard)/_layout/help/index.tsx",
      "parent": "/(dashboard)/_layout"
    },
    "/(dashboard)/_layout/templates/": {
      "filePath": "(dashboard)/_layout/templates/index.tsx",
      "parent": "/(dashboard)/_layout"
    },
    "/(dashboard)/_layout/workshops/": {
      "filePath": "(dashboard)/_layout/workshops/index.tsx",
      "parent": "/(dashboard)/_layout"
    },
    "/event-session/$eventId/record/": {
      "filePath": "event-session/$eventId/record/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
